struct VertexOutput {
    vec4 clip_position;
    vec3 world_position;
    vec2 uv;
};

struct MaterialAttributes {
    vec4 diffuse_color;
    vec3 emissive;
    float emissive_strength;
    vec3 normal;
    float metallic;
    float roughness;
    float ambient_occlusion;
    float lit;
};

layout(push_constant, std140) uniform ObjectData {
    mat4 _model;
    uint material_id;
};

mat4 get_model_matrix() {
    return _model;
}

#define DEFINE_USER_TEXTURE(TYPE, NAME, BINDING) \
    layout(set = 1, binding = BINDING  * 2 + 1) uniform TYPE NAME; \
    layout(set = 1, binding = BINDING  * 2 + 2) uniform sampler NAME##_sampler; \

#define SAMPLE_USER_TEXTURE_2D(NAME, UV) texture(sampler2D(NAME, NAME##_sampler), UV)
#define SAMPLE_USER_TEXTURE_CUBE(NAME, UV) texture(samplerCube(NAME, NAME##_sampler), UV)

#define USER_PARAMS layout(set = 1, binding = 0, std140) uniform 
