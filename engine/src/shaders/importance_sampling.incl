#ifndef INCL_IMPORTANCE_SAMPLING
#define INCL_IMPORTANCE_SAMPLING

#include "commons.incl"


vec3 importance_sample_ggx(vec2 uv, float roughness, vec3 N) {
    float a = roughness * roughness;

    float phi = 2.0 * PI * uv.x;
    float cos_theta = sqrt((1.0 - uv.y) / (1.0 + (a * a - 1.0) * uv.y));
    float sin_theta = sqrt(1.0 - cos_theta * cos_theta);

    vec3 H;
    H.x = sin_theta * cos(phi);
    H.y = sin_theta * sin(phi);
    H.z = cos_theta;

    vec3 up_vector = abs(N.z) < 0.999 ? vec3(0.0, 0.0, 1.0) : vec3(1.0, 0.0, 0.0);
    vec3 tangent_x = normalize(cross(up_vector, N));
    vec3 tangent_y = normalize(cross(N, tangent_x));

    return tangent_x * H.x + tangent_y * H.y + N * H.z;
}

#endif